def nexusurl = System.getProperty("nexusurl") ?: "${nexusurldefault}"

def devrepourl="${nexusurl}/repository/maven-snapshots/"
def relrepourl="${nexusurl}/repository/maven-releases/"
def pubrepourl= "${nexusurl}/repository/maven-public/"

println "nexus url : ${nexusurl}"


buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
        nexusurl = System.getProperty("nexusurl") ?: "http://192.168.81.66:8081"
        pubrepourl= "${nexusurl}/repository/maven-public/"
    }
    repositories {
        mavenLocal()
        maven { url "${pubrepourl}" }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
//apply plugin: 'war'
apply plugin:  'maven'
apply plugin: 'idea'


group = 'com.szyciov'
version = '0.0.1-SNAPSHOT'
def artifactId = "supervision"

description = """supervision"""

def paramRelease =  project.properties.get("release")
if("${paramRelease}" != "null"){
    version = version.replace("-SNAPSHOT","")
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


def repourl=devrepourl

if (!version.contains("SNAPSHOT")){
    repourl=relrepourl
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}



repositories {
    mavenLocal()
    maven { url pubrepourl } // 自定义库地址
    mavenCentral()
}

dependencies {
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter', version:'1.5.4.RELEASE') {
        exclude(module: 'commons-logging')
    }
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version:'4.5.3'
    compile(group: 'org.apache.httpcomponents', name: 'httpclient', version:'4.5.3') {
        exclude(module: 'commons-logging')
    }
    compile group: 'org.apache.httpcomponents', name: 'httpclient-cache', version:'4.5.3'
    compile group: 'org.apache.httpcomponents', name: 'httpcore', version:'4.4.6'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version:'2.6.4'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.6.4'
    compile group: 'org.codehaus.jackson', name: 'jackson-core-asl', version:'1.9.13'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.6.4'
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version:'1.9.13'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version:'2.6.4'
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version:'1.5.4.RELEASE') {
        exclude(module: 'commons-logging')
    }
}
jar {
    baseName = "$artifactId"
    version = "$project.version"
    exclude('config')
}

task showTestTaskClasspath << {
    test.classpath.each { println it }
}

install {
    repositories.mavenInstaller {
        pom.version = "$project.version"
        pom.artifactId = "$artifactId"
        pom.groupId = "$project.group"
    }
}

//gradle profiles param
def pro =  project.properties.get("springProfiles")

if("${pro}" != "null"){
    test.systemProperty 'spring.profiles.active', "${pro}"
    println "spring.profiles.active=${pro}"
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    baseName = "$artifactId"
    version = "$project.version"
    //exclude('config')

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes 'Main-Class': 'com.xunxintech.ruyue.coach.RyCoachBasicDataServiceApplication'
    }
    with jar
}

//上传到nexus
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: repourl)
                    {
                        authentication(userName: "$nexususer", password: "$nexuspwd")
                    }
            pom.version = "$project.version"
            pom.artifactId = "$artifactId"
            pom.groupId = "$project.group"
        }
    }
}
//install.dependsOn fatJar
//fatJar.mustRunAfter jar
//uploadArchives.dependsOn install
